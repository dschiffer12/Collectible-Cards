{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ensureGetImageAvailable = void 0;\nvar _dynamicLoadingSetting = require(\"./dynamicLoading/dynamic-loading-setting.js\");\nvar NativeIconAPI = null;\ntry {\n  NativeIconAPI = require('@react-native-vector-icons/get-image');\n} catch (_unused) {}\nvar globalRef = globalThis;\nvar hasExpoRenderToImage = (0, _dynamicLoadingSetting.getIsRenderToImageSupported)(globalRef);\nvar ensureGetImageAvailable = function ensureGetImageAvailable() {\n  if (NativeIconAPI) {\n    NativeIconAPI.ensureNativeModuleAvailable();\n    return NativeIconAPI;\n  }\n  if (hasExpoRenderToImage) {\n    var ExpoFontUtils = globalRef.expo.modules.ExpoFontUtils;\n    return {\n      getImageForFont: function () {\n        var _getImageForFont = _asyncToGenerator(function* (fontReference, glyph, size, color) {\n          return ExpoFontUtils.renderToImageAsync(glyph, {\n            fontFamily: fontReference,\n            size: size,\n            color: color\n          });\n        });\n        function getImageForFont(_x, _x2, _x3, _x4) {\n          return _getImageForFont.apply(this, arguments);\n        }\n        return getImageForFont;\n      }(),\n      getImageForFontSync: function getImageForFontSync() {\n        throw new Error('You attempted to call `getImageForFontSync`. Expo dev client with `@react-native-vector-icons/get-image` installed is required for this. Alternatively, call `getImageForFont` or generate the image yourself and bundle it with the app.');\n      }\n    };\n  }\n  throw new Error('Error in getImageSource / getImageSourceSync: You need to either (1) install `@react-native-vector-icons/get-image` or (2) use Expo SDK 53+ (Expo dev client or Expo Go). Check your setup and rebuild the app.');\n};\nexports.ensureGetImageAvailable = ensureGetImageAvailable;","map":{"version":3,"names":["_dynamicLoadingSetting","require","NativeIconAPI","_unused","globalRef","globalThis","hasExpoRenderToImage","getIsRenderToImageSupported","ensureGetImageAvailable","ensureNativeModuleAvailable","ExpoFontUtils","expo","modules","getImageForFont","_getImageForFont","_asyncToGenerator","fontReference","glyph","size","color","renderToImageAsync","fontFamily","_x","_x2","_x3","_x4","apply","arguments","getImageForFontSync","Error","exports"],"sources":["C:\\Users\\dschi\\OneDrive\\Desktop\\collectible\\node_modules\\@react-native-vector-icons\\common\\src\\get-image-library.ts"],"sourcesContent":["import { getIsRenderToImageSupported } from './dynamicLoading/dynamic-loading-setting';\n\n// eslint-disable-next-line import/no-mutable-exports\nlet NativeIconAPI: typeof import('@react-native-vector-icons/get-image') | null = null;\n\ntry {\n  // eslint-disable-next-line global-require,import/no-extraneous-dependencies,@typescript-eslint/no-require-imports\n  NativeIconAPI = require('@react-native-vector-icons/get-image');\n} catch {\n  // if this fails, it's likely due to:\n  // \"Invariant Violation: TurboModuleRegistry.getEnforcing(...): 'VectorIcons' could not be found. ...\"\n  // No warning at this stage.\n}\n\nconst globalRef = globalThis;\nconst hasExpoRenderToImage = getIsRenderToImageSupported(globalRef);\n\nexport const ensureGetImageAvailable = () => {\n  if (NativeIconAPI) {\n    NativeIconAPI.ensureNativeModuleAvailable();\n    return NativeIconAPI;\n  }\n  if (hasExpoRenderToImage) {\n    const { ExpoFontUtils } = globalRef.expo.modules;\n    return {\n      getImageForFont: async (fontReference: string, glyph: string, size: number, color: number) =>\n        ExpoFontUtils.renderToImageAsync(glyph, {\n          fontFamily: fontReference,\n          size,\n          color,\n        }),\n      getImageForFontSync: () => {\n        throw new Error(\n          'You attempted to call `getImageForFontSync`. Expo dev client with `@react-native-vector-icons/get-image` installed is required for this. Alternatively, call `getImageForFont` or generate the image yourself and bundle it with the app.',\n        );\n      },\n    };\n  }\n  throw new Error(\n    'Error in getImageSource / getImageSourceSync: You need to either (1) install `@react-native-vector-icons/get-image` or (2) use Expo SDK 53+ (Expo dev client or Expo Go). Check your setup and rebuild the app.',\n  );\n};\n"],"mappings":";;;;;;;AAAA,IAAAA,sBAAA,GAAAC,OAAA;AAGA,IAAIC,aAA2E,GAAG,IAAI;AAEtF,IAAI;EAEFA,aAAa,GAAGD,OAAO,CAAC,sCAAsC,CAAC;AACjE,CAAC,CAAC,OAAAE,OAAA,EAAM,CAGN;AAGF,IAAMC,SAAS,GAAGC,UAAU;AAC5B,IAAMC,oBAAoB,GAAG,IAAAN,sBAAA,CAAAO,2BAA2B,EAACH,SAAS,CAAC;AAE5D,IAAMI,uBAAuB,GAAG,SAA1BA,uBAAuBA,CAAA,EAAS;EAC3C,IAAIN,aAAa,EAAE;IACjBA,aAAa,CAACO,2BAA2B,CAAC,CAAC;IAC3C,OAAOP,aAAa;EACtB;EACA,IAAII,oBAAoB,EAAE;IACxB,IAAQI,aAAA,GAAkBN,SAAS,CAACO,IAAI,CAACC,OAAO,CAAxCF,aAAA;IACR,OAAO;MACLG,eAAe;QAAA,IAAAC,gBAAA,GAAAC,iBAAA,CAAE,WAAOC,aAAqB,EAAEC,KAAa,EAAEC,IAAY,EAAEC,KAAa;UAAA,OACvFT,aAAa,CAACU,kBAAkB,CAACH,KAAK,EAAE;YACtCI,UAAU,EAAEL,aAAa;YACzBE,IAAI,EAAJA,IAAI;YACJC,KAAA,EAAAA;UACF,CAAC,CAAC;QAAA;QAAA,SALJN,eAAeA,CAAAS,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;UAAA,OAAAX,gBAAA,CAAAY,KAAA,OAAAC,SAAA;QAAA;QAAA,OAAfd,eAAe;MAAA,GAKX;MACJe,mBAAmB,EAAE,SAArBA,mBAAmBA,CAAA,EAAQ;QACzB,MAAM,IAAIC,KAAK,CACb,2OACF,CAAC;MACH;IACF,CAAC;EACH;EACA,MAAM,IAAIA,KAAK,CACb,iNACF,CAAC;AACH,CAAC;AAACC,OAAA,CAAAtB,uBAAA,GAAAA,uBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}