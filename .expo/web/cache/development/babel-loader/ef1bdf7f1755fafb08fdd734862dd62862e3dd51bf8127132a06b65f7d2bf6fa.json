{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { Card, Title, Paragraph, List, Switch, Button, Divider, Dialog, Portal, TextInput } from 'react-native-paper';\nimport { Ionicons } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { getCollectionStats, exportCollection, importCollection } from \"../services/collectionService\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ProfileScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    stats = _useState2[0],\n    setStats = _useState2[1];\n  var _useState3 = useState({\n      autoSave: true,\n      notifications: true,\n      darkMode: false,\n      highQualityScan: true\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    settings = _useState4[0],\n    setSettings = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    exportDialogVisible = _useState6[0],\n    setExportDialogVisible = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    importDialogVisible = _useState8[0],\n    setImportDialogVisible = _useState8[1];\n  var _useState9 = useState(''),\n    _useState0 = _slicedToArray(_useState9, 2),\n    exportData = _useState0[0],\n    setExportData = _useState0[1];\n  useEffect(function () {\n    loadStats();\n    loadSettings();\n  }, []);\n  var loadStats = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var collectionStats = yield getCollectionStats();\n        setStats(collectionStats);\n      } catch (error) {\n        console.error('Error loading stats:', error);\n      }\n    });\n    return function loadStats() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var loadSettings = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var savedSettings = yield AsyncStorage.getItem('appSettings');\n        if (savedSettings) {\n          setSettings(JSON.parse(savedSettings));\n        }\n      } catch (error) {\n        console.error('Error loading settings:', error);\n      }\n    });\n    return function loadSettings() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var saveSettings = function () {\n    var _ref3 = _asyncToGenerator(function* (newSettings) {\n      try {\n        yield AsyncStorage.setItem('appSettings', JSON.stringify(newSettings));\n        setSettings(newSettings);\n      } catch (error) {\n        console.error('Error saving settings:', error);\n      }\n    });\n    return function saveSettings(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handleExport = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        var data = yield exportCollection();\n        setExportData(data);\n        setExportDialogVisible(true);\n      } catch (error) {\n        console.error('Error exporting collection:', error);\n        Alert.alert('Error', 'Failed to export collection');\n      }\n    });\n    return function handleExport() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var handleImport = function () {\n    var _ref5 = _asyncToGenerator(function* () {\n      setImportDialogVisible(true);\n    });\n    return function handleImport() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var confirmImport = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      if (!exportData.trim()) {\n        Alert.alert('Error', 'Please enter valid JSON data');\n        return;\n      }\n      try {\n        yield importCollection(exportData);\n        setImportDialogVisible(false);\n        setExportData('');\n        yield loadStats();\n        Alert.alert('Success', 'Collection imported successfully');\n      } catch (error) {\n        console.error('Error importing collection:', error);\n        Alert.alert('Error', 'Failed to import collection. Please check the data format.');\n      }\n    });\n    return function confirmImport() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  var clearCollection = function clearCollection() {\n    Alert.alert('Clear Collection', 'Are you sure you want to clear your entire collection? This action cannot be undone.', [{\n      text: 'Cancel',\n      style: 'cancel'\n    }, {\n      text: 'Clear',\n      style: 'destructive',\n      onPress: function () {\n        var _onPress = _asyncToGenerator(function* () {\n          try {\n            Alert.alert('Success', 'Collection cleared successfully');\n            yield loadStats();\n          } catch (error) {\n            console.error('Error clearing collection:', error);\n            Alert.alert('Error', 'Failed to clear collection');\n          }\n        });\n        function onPress() {\n          return _onPress.apply(this, arguments);\n        }\n        return onPress;\n      }()\n    }]);\n  };\n  var shareApp = function () {\n    var _ref7 = _asyncToGenerator(function* () {\n      try {\n        yield Share.share({\n          message: 'Check out this awesome collectible card scanner app!',\n          url: 'https://example.com/app'\n        });\n      } catch (error) {\n        console.error('Error sharing app:', error);\n      }\n    });\n    return function shareApp() {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n  var openPrivacyPolicy = function openPrivacyPolicy() {\n    Linking.openURL('https://example.com/privacy');\n  };\n  var openTermsOfService = function openTermsOfService() {\n    Linking.openURL('https://example.com/terms');\n  };\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(Card, {\n      style: styles.profileCard,\n      children: _jsx(Card.Content, {\n        children: _jsxs(View, {\n          style: styles.profileHeader,\n          children: [_jsx(View, {\n            style: styles.avatar,\n            children: _jsx(Ionicons, {\n              name: \"person\",\n              size: 40,\n              color: \"#007AFF\"\n            })\n          }), _jsxs(View, {\n            style: styles.profileInfo,\n            children: [_jsx(Title, {\n              children: \"Collector\"\n            }), _jsx(Paragraph, {\n              children: \"Card Enthusiast\"\n            })]\n          })]\n        })\n      })\n    }), stats && _jsx(Card, {\n      style: styles.statsCard,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Title, {\n          children: \"Collection Overview\"\n        }), _jsxs(View, {\n          style: styles.statsGrid,\n          children: [_jsxs(View, {\n            style: styles.statItem,\n            children: [_jsx(Text, {\n              style: styles.statNumber,\n              children: stats.totalCards\n            }), _jsx(Text, {\n              style: styles.statLabel,\n              children: \"Total Cards\"\n            })]\n          }), _jsxs(View, {\n            style: styles.statItem,\n            children: [_jsx(Text, {\n              style: styles.statNumber,\n              children: stats.uniqueCards\n            }), _jsx(Text, {\n              style: styles.statLabel,\n              children: \"Unique Cards\"\n            })]\n          }), _jsxs(View, {\n            style: styles.statItem,\n            children: [_jsxs(Text, {\n              style: styles.statNumber,\n              children: [\"$\", stats.totalValue.toFixed(2)]\n            }), _jsx(Text, {\n              style: styles.statLabel,\n              children: \"Total Value\"\n            })]\n          })]\n        })]\n      })\n    }), _jsx(Card, {\n      style: styles.settingsCard,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Title, {\n          children: \"Settings\"\n        }), _jsx(List.Item, {\n          title: \"Auto-save scanned cards\",\n          description: \"Automatically save cards to collection after scanning\",\n          left: function left(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"content-save\"\n            }));\n          },\n          right: function right() {\n            return _jsx(Switch, {\n              value: settings.autoSave,\n              onValueChange: function onValueChange(value) {\n                return saveSettings(_objectSpread(_objectSpread({}, settings), {}, {\n                  autoSave: value\n                }));\n              }\n            });\n          }\n        }), _jsx(Divider, {}), _jsx(List.Item, {\n          title: \"Push notifications\",\n          description: \"Receive notifications about price changes\",\n          left: function left(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"bell\"\n            }));\n          },\n          right: function right() {\n            return _jsx(Switch, {\n              value: settings.notifications,\n              onValueChange: function onValueChange(value) {\n                return saveSettings(_objectSpread(_objectSpread({}, settings), {}, {\n                  notifications: value\n                }));\n              }\n            });\n          }\n        }), _jsx(Divider, {}), _jsx(List.Item, {\n          title: \"Dark mode\",\n          description: \"Use dark theme throughout the app\",\n          left: function left(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"theme-light-dark\"\n            }));\n          },\n          right: function right() {\n            return _jsx(Switch, {\n              value: settings.darkMode,\n              onValueChange: function onValueChange(value) {\n                return saveSettings(_objectSpread(_objectSpread({}, settings), {}, {\n                  darkMode: value\n                }));\n              }\n            });\n          }\n        }), _jsx(Divider, {}), _jsx(List.Item, {\n          title: \"High quality scanning\",\n          description: \"Use higher resolution for better card recognition\",\n          left: function left(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"camera\"\n            }));\n          },\n          right: function right() {\n            return _jsx(Switch, {\n              value: settings.highQualityScan,\n              onValueChange: function onValueChange(value) {\n                return saveSettings(_objectSpread(_objectSpread({}, settings), {}, {\n                  highQualityScan: value\n                }));\n              }\n            });\n          }\n        })]\n      })\n    }), _jsx(Card, {\n      style: styles.managementCard,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Title, {\n          children: \"Collection Management\"\n        }), _jsx(Button, {\n          mode: \"outlined\",\n          icon: \"export\",\n          onPress: handleExport,\n          style: styles.managementButton,\n          children: \"Export Collection\"\n        }), _jsx(Button, {\n          mode: \"outlined\",\n          icon: \"import\",\n          onPress: handleImport,\n          style: styles.managementButton,\n          children: \"Import Collection\"\n        }), _jsx(Button, {\n          mode: \"outlined\",\n          icon: \"delete\",\n          onPress: clearCollection,\n          style: styles.managementButton,\n          textColor: \"red\",\n          children: \"Clear Collection\"\n        })]\n      })\n    }), _jsx(Card, {\n      style: styles.supportCard,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Title, {\n          children: \"Support & Legal\"\n        }), _jsx(List.Item, {\n          title: \"Share App\",\n          description: \"Tell friends about this app\",\n          left: function left(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"share\"\n            }));\n          },\n          onPress: shareApp\n        }), _jsx(Divider, {}), _jsx(List.Item, {\n          title: \"Privacy Policy\",\n          description: \"Read our privacy policy\",\n          left: function left(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"shield\"\n            }));\n          },\n          onPress: openPrivacyPolicy\n        }), _jsx(Divider, {}), _jsx(List.Item, {\n          title: \"Terms of Service\",\n          description: \"Read our terms of service\",\n          left: function left(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"file-document\"\n            }));\n          },\n          onPress: openTermsOfService\n        }), _jsx(Divider, {}), _jsx(List.Item, {\n          title: \"About\",\n          description: \"Version 1.0.0\",\n          left: function left(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"information\"\n            }));\n          }\n        })]\n      })\n    }), _jsx(Portal, {\n      children: _jsxs(Dialog, {\n        visible: exportDialogVisible,\n        onDismiss: function onDismiss() {\n          return setExportDialogVisible(false);\n        },\n        children: [_jsx(Dialog.Title, {\n          children: \"Export Collection\"\n        }), _jsxs(Dialog.Content, {\n          children: [_jsx(Paragraph, {\n            children: \"Your collection data has been exported. You can copy this data to save it elsewhere.\"\n          }), _jsx(TextInput, {\n            value: exportData,\n            multiline: true,\n            numberOfLines: 10,\n            style: styles.exportInput,\n            editable: false\n          })]\n        }), _jsx(Dialog.Actions, {\n          children: _jsx(Button, {\n            onPress: function onPress() {\n              return setExportDialogVisible(false);\n            },\n            children: \"Close\"\n          })\n        })]\n      })\n    }), _jsx(Portal, {\n      children: _jsxs(Dialog, {\n        visible: importDialogVisible,\n        onDismiss: function onDismiss() {\n          return setImportDialogVisible(false);\n        },\n        children: [_jsx(Dialog.Title, {\n          children: \"Import Collection\"\n        }), _jsxs(Dialog.Content, {\n          children: [_jsx(Paragraph, {\n            children: \"Paste your exported collection data here to import it.\"\n          }), _jsx(TextInput, {\n            value: exportData,\n            onChangeText: setExportData,\n            multiline: true,\n            numberOfLines: 10,\n            style: styles.exportInput,\n            placeholder: \"Paste JSON data here...\"\n          })]\n        }), _jsxs(Dialog.Actions, {\n          children: [_jsx(Button, {\n            onPress: function onPress() {\n              return setImportDialogVisible(false);\n            },\n            children: \"Cancel\"\n          }), _jsx(Button, {\n            onPress: confirmImport,\n            children: \"Import\"\n          })]\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f5f5f5'\n  },\n  profileCard: {\n    margin: 16,\n    marginBottom: 8\n  },\n  profileHeader: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  avatar: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    backgroundColor: '#f0f0f0',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 16\n  },\n  profileInfo: {\n    flex: 1\n  },\n  statsCard: {\n    margin: 16,\n    marginBottom: 8\n  },\n  statsGrid: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 16\n  },\n  statItem: {\n    alignItems: 'center'\n  },\n  statNumber: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#007AFF'\n  },\n  statLabel: {\n    fontSize: 12,\n    color: '#666',\n    marginTop: 4\n  },\n  settingsCard: {\n    margin: 16,\n    marginBottom: 8\n  },\n  managementCard: {\n    margin: 16,\n    marginBottom: 8\n  },\n  managementButton: {\n    marginVertical: 4\n  },\n  supportCard: {\n    margin: 16,\n    marginBottom: 16\n  },\n  exportInput: {\n    marginTop: 16,\n    backgroundColor: '#f9f9f9'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","Alert","Share","Linking","Card","Title","Paragraph","List","Switch","Button","Divider","Dialog","Portal","TextInput","Ionicons","AsyncStorage","getCollectionStats","exportCollection","importCollection","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_useState","_useState2","_slicedToArray","stats","setStats","_useState3","autoSave","notifications","darkMode","highQualityScan","_useState4","settings","setSettings","_useState5","_useState6","exportDialogVisible","setExportDialogVisible","_useState7","_useState8","importDialogVisible","setImportDialogVisible","_useState9","_useState0","exportData","setExportData","loadStats","loadSettings","_ref","_asyncToGenerator","collectionStats","error","console","apply","arguments","_ref2","savedSettings","getItem","JSON","parse","saveSettings","_ref3","newSettings","setItem","stringify","_x","handleExport","_ref4","data","alert","handleImport","_ref5","confirmImport","_ref6","trim","clearCollection","text","style","onPress","_onPress","shareApp","_ref7","share","message","url","openPrivacyPolicy","openURL","openTermsOfService","styles","container","children","profileCard","Content","profileHeader","avatar","name","size","color","profileInfo","statsCard","statsGrid","statItem","statNumber","totalCards","statLabel","uniqueCards","totalValue","toFixed","settingsCard","Item","title","description","left","props","Icon","_objectSpread","icon","right","value","onValueChange","managementCard","mode","managementButton","textColor","supportCard","visible","onDismiss","multiline","numberOfLines","exportInput","editable","Actions","onChangeText","placeholder","create","flex","backgroundColor","margin","marginBottom","flexDirection","alignItems","width","height","borderRadius","justifyContent","marginRight","marginTop","fontSize","fontWeight","marginVertical"],"sources":["C:/Users/dschi/OneDrive/Desktop/collectible/src/screens/ProfileScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Alert,\r\n  Share,\r\n  Linking,\r\n} from 'react-native';\r\nimport {\r\n  Card,\r\n  Title,\r\n  Paragraph,\r\n  List,\r\n  Switch,\r\n  Button,\r\n  Divider,\r\n  Dialog,\r\n  Portal,\r\n  TextInput,\r\n} from 'react-native-paper';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n// Import services\r\nimport { \r\n  getCollectionStats, \r\n  exportCollection, \r\n  importCollection,\r\n  removeCardFromCollection,\r\n} from '../services/collectionService';\r\n\r\ninterface CollectionStats {\r\n  totalCards: number;\r\n  totalValue: number;\r\n  uniqueCards: number;\r\n  mostValuableCard: any;\r\n  recentAdditions: any[];\r\n}\r\n\r\nexport default function ProfileScreen() {\r\n  const [stats, setStats] = useState<CollectionStats | null>(null);\r\n  const [settings, setSettings] = useState({\r\n    autoSave: true,\r\n    notifications: true,\r\n    darkMode: false,\r\n    highQualityScan: true,\r\n  });\r\n  const [exportDialogVisible, setExportDialogVisible] = useState(false);\r\n  const [importDialogVisible, setImportDialogVisible] = useState(false);\r\n  const [exportData, setExportData] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadStats();\r\n    loadSettings();\r\n  }, []);\r\n\r\n  const loadStats = async () => {\r\n    try {\r\n      const collectionStats = await getCollectionStats();\r\n      setStats(collectionStats);\r\n    } catch (error) {\r\n      console.error('Error loading stats:', error);\r\n    }\r\n  };\r\n\r\n  const loadSettings = async () => {\r\n    try {\r\n      const savedSettings = await AsyncStorage.getItem('appSettings');\r\n      if (savedSettings) {\r\n        setSettings(JSON.parse(savedSettings));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading settings:', error);\r\n    }\r\n  };\r\n\r\n  const saveSettings = async (newSettings: typeof settings) => {\r\n    try {\r\n      await AsyncStorage.setItem('appSettings', JSON.stringify(newSettings));\r\n      setSettings(newSettings);\r\n    } catch (error) {\r\n      console.error('Error saving settings:', error);\r\n    }\r\n  };\r\n\r\n  const handleExport = async () => {\r\n    try {\r\n      const data = await exportCollection();\r\n      setExportData(data);\r\n      setExportDialogVisible(true);\r\n    } catch (error) {\r\n      console.error('Error exporting collection:', error);\r\n      Alert.alert('Error', 'Failed to export collection');\r\n    }\r\n  };\r\n\r\n  const handleImport = async () => {\r\n    setImportDialogVisible(true);\r\n  };\r\n\r\n  const confirmImport = async () => {\r\n    if (!exportData.trim()) {\r\n      Alert.alert('Error', 'Please enter valid JSON data');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await importCollection(exportData);\r\n      setImportDialogVisible(false);\r\n      setExportData('');\r\n      await loadStats();\r\n      Alert.alert('Success', 'Collection imported successfully');\r\n    } catch (error) {\r\n      console.error('Error importing collection:', error);\r\n      Alert.alert('Error', 'Failed to import collection. Please check the data format.');\r\n    }\r\n  };\r\n\r\n  const clearCollection = () => {\r\n    Alert.alert(\r\n      'Clear Collection',\r\n      'Are you sure you want to clear your entire collection? This action cannot be undone.',\r\n      [\r\n        { text: 'Cancel', style: 'cancel' },\r\n        {\r\n          text: 'Clear',\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              // This would need to be implemented in the collection service\r\n              Alert.alert('Success', 'Collection cleared successfully');\r\n              await loadStats();\r\n            } catch (error) {\r\n              console.error('Error clearing collection:', error);\r\n              Alert.alert('Error', 'Failed to clear collection');\r\n            }\r\n          },\r\n        },\r\n      ]\r\n    );\r\n  };\r\n\r\n  const shareApp = async () => {\r\n    try {\r\n      await Share.share({\r\n        message: 'Check out this awesome collectible card scanner app!',\r\n        url: 'https://example.com/app', // Replace with your app's URL\r\n      });\r\n    } catch (error) {\r\n      console.error('Error sharing app:', error);\r\n    }\r\n  };\r\n\r\n  const openPrivacyPolicy = () => {\r\n    Linking.openURL('https://example.com/privacy'); // Replace with your privacy policy URL\r\n  };\r\n\r\n  const openTermsOfService = () => {\r\n    Linking.openURL('https://example.com/terms'); // Replace with your terms URL\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {/* Profile Header */}\r\n      <Card style={styles.profileCard}>\r\n        <Card.Content>\r\n          <View style={styles.profileHeader}>\r\n            <View style={styles.avatar}>\r\n              <Ionicons name=\"person\" size={40} color=\"#007AFF\" />\r\n            </View>\r\n            <View style={styles.profileInfo}>\r\n              <Title>Collector</Title>\r\n              <Paragraph>Card Enthusiast</Paragraph>\r\n            </View>\r\n          </View>\r\n        </Card.Content>\r\n      </Card>\r\n\r\n      {/* Collection Stats */}\r\n      {stats && (\r\n        <Card style={styles.statsCard}>\r\n          <Card.Content>\r\n            <Title>Collection Overview</Title>\r\n            <View style={styles.statsGrid}>\r\n              <View style={styles.statItem}>\r\n                <Text style={styles.statNumber}>{stats.totalCards}</Text>\r\n                <Text style={styles.statLabel}>Total Cards</Text>\r\n              </View>\r\n              <View style={styles.statItem}>\r\n                <Text style={styles.statNumber}>{stats.uniqueCards}</Text>\r\n                <Text style={styles.statLabel}>Unique Cards</Text>\r\n              </View>\r\n              <View style={styles.statItem}>\r\n                <Text style={styles.statNumber}>${stats.totalValue.toFixed(2)}</Text>\r\n                <Text style={styles.statLabel}>Total Value</Text>\r\n              </View>\r\n            </View>\r\n          </Card.Content>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Settings */}\r\n      <Card style={styles.settingsCard}>\r\n        <Card.Content>\r\n          <Title>Settings</Title>\r\n          \r\n          <List.Item\r\n            title=\"Auto-save scanned cards\"\r\n            description=\"Automatically save cards to collection after scanning\"\r\n            left={(props) => <List.Icon {...props} icon=\"content-save\" />}\r\n            right={() => (\r\n              <Switch\r\n                value={settings.autoSave}\r\n                onValueChange={(value) => \r\n                  saveSettings({ ...settings, autoSave: value })\r\n                }\r\n              />\r\n            )}\r\n          />\r\n          \r\n          <Divider />\r\n          \r\n          <List.Item\r\n            title=\"Push notifications\"\r\n            description=\"Receive notifications about price changes\"\r\n            left={(props) => <List.Icon {...props} icon=\"bell\" />}\r\n            right={() => (\r\n              <Switch\r\n                value={settings.notifications}\r\n                onValueChange={(value) => \r\n                  saveSettings({ ...settings, notifications: value })\r\n                }\r\n              />\r\n            )}\r\n          />\r\n          \r\n          <Divider />\r\n          \r\n          <List.Item\r\n            title=\"Dark mode\"\r\n            description=\"Use dark theme throughout the app\"\r\n            left={(props) => <List.Icon {...props} icon=\"theme-light-dark\" />}\r\n            right={() => (\r\n              <Switch\r\n                value={settings.darkMode}\r\n                onValueChange={(value) => \r\n                  saveSettings({ ...settings, darkMode: value })\r\n                }\r\n              />\r\n            )}\r\n          />\r\n          \r\n          <Divider />\r\n          \r\n          <List.Item\r\n            title=\"High quality scanning\"\r\n            description=\"Use higher resolution for better card recognition\"\r\n            left={(props) => <List.Icon {...props} icon=\"camera\" />}\r\n            right={() => (\r\n              <Switch\r\n                value={settings.highQualityScan}\r\n                onValueChange={(value) => \r\n                  saveSettings({ ...settings, highQualityScan: value })\r\n                }\r\n              />\r\n            )}\r\n          />\r\n        </Card.Content>\r\n      </Card>\r\n\r\n      {/* Collection Management */}\r\n      <Card style={styles.managementCard}>\r\n        <Card.Content>\r\n          <Title>Collection Management</Title>\r\n          \r\n          <Button\r\n            mode=\"outlined\"\r\n            icon=\"export\"\r\n            onPress={handleExport}\r\n            style={styles.managementButton}\r\n          >\r\n            Export Collection\r\n          </Button>\r\n          \r\n          <Button\r\n            mode=\"outlined\"\r\n            icon=\"import\"\r\n            onPress={handleImport}\r\n            style={styles.managementButton}\r\n          >\r\n            Import Collection\r\n          </Button>\r\n          \r\n          <Button\r\n            mode=\"outlined\"\r\n            icon=\"delete\"\r\n            onPress={clearCollection}\r\n            style={styles.managementButton}\r\n            textColor=\"red\"\r\n          >\r\n            Clear Collection\r\n          </Button>\r\n        </Card.Content>\r\n      </Card>\r\n\r\n      {/* Support & Legal */}\r\n      <Card style={styles.supportCard}>\r\n        <Card.Content>\r\n          <Title>Support & Legal</Title>\r\n          \r\n          <List.Item\r\n            title=\"Share App\"\r\n            description=\"Tell friends about this app\"\r\n            left={(props) => <List.Icon {...props} icon=\"share\" />}\r\n            onPress={shareApp}\r\n          />\r\n          \r\n          <Divider />\r\n          \r\n          <List.Item\r\n            title=\"Privacy Policy\"\r\n            description=\"Read our privacy policy\"\r\n            left={(props) => <List.Icon {...props} icon=\"shield\" />}\r\n            onPress={openPrivacyPolicy}\r\n          />\r\n          \r\n          <Divider />\r\n          \r\n          <List.Item\r\n            title=\"Terms of Service\"\r\n            description=\"Read our terms of service\"\r\n            left={(props) => <List.Icon {...props} icon=\"file-document\" />}\r\n            onPress={openTermsOfService}\r\n          />\r\n          \r\n          <Divider />\r\n          \r\n          <List.Item\r\n            title=\"About\"\r\n            description=\"Version 1.0.0\"\r\n            left={(props) => <List.Icon {...props} icon=\"information\" />}\r\n          />\r\n        </Card.Content>\r\n      </Card>\r\n\r\n      {/* Export Dialog */}\r\n      <Portal>\r\n        <Dialog visible={exportDialogVisible} onDismiss={() => setExportDialogVisible(false)}>\r\n          <Dialog.Title>Export Collection</Dialog.Title>\r\n          <Dialog.Content>\r\n            <Paragraph>\r\n              Your collection data has been exported. You can copy this data to save it elsewhere.\r\n            </Paragraph>\r\n            <TextInput\r\n              value={exportData}\r\n              multiline\r\n              numberOfLines={10}\r\n              style={styles.exportInput}\r\n              editable={false}\r\n            />\r\n          </Dialog.Content>\r\n          <Dialog.Actions>\r\n            <Button onPress={() => setExportDialogVisible(false)}>Close</Button>\r\n          </Dialog.Actions>\r\n        </Dialog>\r\n      </Portal>\r\n\r\n      {/* Import Dialog */}\r\n      <Portal>\r\n        <Dialog visible={importDialogVisible} onDismiss={() => setImportDialogVisible(false)}>\r\n          <Dialog.Title>Import Collection</Dialog.Title>\r\n          <Dialog.Content>\r\n            <Paragraph>\r\n              Paste your exported collection data here to import it.\r\n            </Paragraph>\r\n            <TextInput\r\n              value={exportData}\r\n              onChangeText={setExportData}\r\n              multiline\r\n              numberOfLines={10}\r\n              style={styles.exportInput}\r\n              placeholder=\"Paste JSON data here...\"\r\n            />\r\n          </Dialog.Content>\r\n          <Dialog.Actions>\r\n            <Button onPress={() => setImportDialogVisible(false)}>Cancel</Button>\r\n            <Button onPress={confirmImport}>Import</Button>\r\n          </Dialog.Actions>\r\n        </Dialog>\r\n      </Portal>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  profileCard: {\r\n    margin: 16,\r\n    marginBottom: 8,\r\n  },\r\n  profileHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 30,\r\n    backgroundColor: '#f0f0f0',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginRight: 16,\r\n  },\r\n  profileInfo: {\r\n    flex: 1,\r\n  },\r\n  statsCard: {\r\n    margin: 16,\r\n    marginBottom: 8,\r\n  },\r\n  statsGrid: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: 16,\r\n  },\r\n  statItem: {\r\n    alignItems: 'center',\r\n  },\r\n  statNumber: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    color: '#007AFF',\r\n  },\r\n  statLabel: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n    marginTop: 4,\r\n  },\r\n  settingsCard: {\r\n    margin: 16,\r\n    marginBottom: 8,\r\n  },\r\n  managementCard: {\r\n    margin: 16,\r\n    marginBottom: 8,\r\n  },\r\n  managementButton: {\r\n    marginVertical: 4,\r\n  },\r\n  supportCard: {\r\n    margin: 16,\r\n    marginBottom: 16,\r\n  },\r\n  exportInput: {\r\n    marginTop: 16,\r\n    backgroundColor: '#f9f9f9',\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}