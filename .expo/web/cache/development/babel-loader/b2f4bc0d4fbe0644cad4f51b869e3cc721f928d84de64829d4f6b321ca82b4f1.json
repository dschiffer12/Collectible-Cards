{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Camera, CameraType } from 'expo-camera';\nimport { Ionicons } from '@expo/vector-icons';\nimport { Button, Card, Title, Paragraph } from 'react-native-paper';\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport { detectCards } from \"../services/aiService\";\nimport { saveCardToCollection } from \"../services/collectionService\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width,\n  height = _Dimensions$get.height;\nexport default function ScannerScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(CameraType.back),\n    _useState4 = _slicedToArray(_useState3, 2),\n    cameraType = _useState4[0],\n    setCameraType = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isScanning = _useState6[0],\n    setIsScanning = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 2),\n    detectedCards = _useState8[0],\n    setDetectedCards = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    isProcessing = _useState0[0],\n    setIsProcessing = _useState0[1];\n  var cameraRef = useRef(null);\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$Camera$request = yield Camera.requestCameraPermissionsAsync(),\n        status = _yield$Camera$request.status;\n      setHasPermission(status === 'granted');\n    })();\n  }, []);\n  var takePicture = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (cameraRef.current && !isProcessing) {\n        setIsProcessing(true);\n        try {\n          var photo = yield cameraRef.current.takePictureAsync({\n            quality: 0.8,\n            base64: true\n          });\n          yield processImage(photo.uri);\n        } catch (error) {\n          console.error('Error taking picture:', error);\n          Alert.alert('Error', 'Failed to take picture');\n        } finally {\n          setIsProcessing(false);\n        }\n      }\n    });\n    return function takePicture() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var processImage = function () {\n    var _ref3 = _asyncToGenerator(function* (imageUri) {\n      try {\n        var optimizedImage = yield ImageManipulator.manipulateAsync(imageUri, [{\n          resize: {\n            width: 1024\n          }\n        }], {\n          compress: 0.8,\n          format: ImageManipulator.SaveFormat.JPEG,\n          base64: true\n        });\n        var _detectedCards = yield detectCards(optimizedImage.base64);\n        setDetectedCards(_detectedCards);\n        if (_detectedCards.length > 0) {\n          setIsScanning(true);\n        } else {\n          Alert.alert('No Cards Found', 'No collectible cards were detected in the image. Please try again.');\n        }\n      } catch (error) {\n        console.error('Error processing image:', error);\n        Alert.alert('Error', 'Failed to process image');\n      }\n    });\n    return function processImage(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var saveCard = function () {\n    var _ref4 = _asyncToGenerator(function* (card) {\n      try {\n        yield saveCardToCollection(card);\n        Alert.alert('Success', `${card.name} has been added to your collection!`);\n        setDetectedCards(function (prev) {\n          return prev.filter(function (c) {\n            return c.id !== card.id;\n          });\n        });\n        if (detectedCards.length === 1) {\n          setIsScanning(false);\n        }\n      } catch (error) {\n        console.error('Error saving card:', error);\n        Alert.alert('Error', 'Failed to save card to collection');\n      }\n    });\n    return function saveCard(_x2) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var skipCard = function skipCard(cardId) {\n    setDetectedCards(function (prev) {\n      return prev.filter(function (c) {\n        return c.id !== cardId;\n      });\n    });\n    if (detectedCards.length === 1) {\n      setIsScanning(false);\n    }\n  };\n  var flipCamera = function flipCamera() {\n    setCameraType(function (current) {\n      return current === CameraType.back ? CameraType.front : CameraType.back;\n    });\n  };\n  if (hasPermission === null) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(Text, {\n        children: \"Requesting camera permission...\"\n      })\n    });\n  }\n  if (hasPermission === false) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(Text, {\n        children: \"No access to camera\"\n      })\n    });\n  }\n  if (isScanning) {\n    return _jsxs(View, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.scanningHeader,\n        children: [_jsx(Title, {\n          children: \"Detected Cards\"\n        }), _jsxs(Paragraph, {\n          children: [detectedCards.length, \" card(s) found\"]\n        })]\n      }), _jsx(View, {\n        style: styles.cardsContainer,\n        children: detectedCards.map(function (card) {\n          return _jsxs(Card, {\n            style: styles.cardItem,\n            children: [_jsx(Card.Cover, {\n              source: {\n                uri: card.image\n              }\n            }), _jsxs(Card.Content, {\n              children: [_jsx(Title, {\n                children: card.name\n              }), _jsx(Paragraph, {\n                children: card.set\n              }), _jsxs(Paragraph, {\n                children: [\"Estimated Value: $\", card.price]\n              }), _jsxs(Paragraph, {\n                children: [\"Confidence: \", Math.round(card.confidence * 100), \"%\"]\n              })]\n            }), _jsxs(Card.Actions, {\n              children: [_jsx(Button, {\n                onPress: function onPress() {\n                  return saveCard(card);\n                },\n                mode: \"contained\",\n                children: \"Add to Collection\"\n              }), _jsx(Button, {\n                onPress: function onPress() {\n                  return skipCard(card.id);\n                },\n                mode: \"outlined\",\n                children: \"Skip\"\n              })]\n            })]\n          }, card.id);\n        })\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return setIsScanning(false);\n        },\n        mode: \"outlined\",\n        style: styles.backButton,\n        children: \"Back to Scanner\"\n      })]\n    });\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(Camera, {\n      style: styles.camera,\n      type: cameraType,\n      ref: cameraRef,\n      children: [_jsxs(View, {\n        style: styles.overlay,\n        children: [_jsxs(View, {\n          style: styles.scanFrame,\n          children: [_jsx(View, {\n            style: styles.corner\n          }), _jsx(View, {\n            style: [styles.corner, styles.cornerTopRight]\n          }), _jsx(View, {\n            style: [styles.corner, styles.cornerBottomLeft]\n          }), _jsx(View, {\n            style: [styles.corner, styles.cornerBottomRight]\n          })]\n        }), _jsx(Text, {\n          style: styles.instructionText,\n          children: \"Position cards within the frame\"\n        })]\n      }), _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.flipButton,\n          onPress: flipCamera,\n          children: _jsx(Ionicons, {\n            name: \"camera-reverse\",\n            size: 30,\n            color: \"white\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: [styles.captureButton, isProcessing && styles.captureButtonDisabled],\n          onPress: takePicture,\n          disabled: isProcessing,\n          children: _jsx(View, {\n            style: styles.captureButtonInner\n          })\n        }), _jsx(View, {\n          style: styles.placeholder\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  camera: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  scanFrame: {\n    width: width * 0.8,\n    height: height * 0.4,\n    borderWidth: 2,\n    borderColor: 'transparent',\n    position: 'relative'\n  },\n  corner: {\n    position: 'absolute',\n    width: 30,\n    height: 30,\n    borderLeftWidth: 3,\n    borderTopWidth: 3,\n    borderColor: '#007AFF',\n    top: -2,\n    left: -2\n  },\n  cornerTopRight: {\n    right: -2,\n    left: 'auto',\n    borderLeftWidth: 0,\n    borderRightWidth: 3\n  },\n  cornerBottomLeft: {\n    bottom: -2,\n    top: 'auto',\n    borderTopWidth: 0,\n    borderBottomWidth: 3\n  },\n  cornerBottomRight: {\n    bottom: -2,\n    right: -2,\n    top: 'auto',\n    left: 'auto',\n    borderLeftWidth: 0,\n    borderTopWidth: 0,\n    borderRightWidth: 3,\n    borderBottomWidth: 3\n  },\n  instructionText: {\n    color: 'white',\n    fontSize: 16,\n    textAlign: 'center',\n    marginTop: 20,\n    backgroundColor: 'rgba(0,0,0,0.7)',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 20\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center',\n    paddingBottom: 50,\n    paddingHorizontal: 20\n  },\n  flipButton: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: 'rgba(0,0,0,0.5)',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  captureButton: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    backgroundColor: 'rgba(255,255,255,0.3)',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 4,\n    borderColor: 'white'\n  },\n  captureButtonDisabled: {\n    opacity: 0.5\n  },\n  captureButtonInner: {\n    width: 60,\n    height: 60,\n    borderRadius: 30,\n    backgroundColor: 'white'\n  },\n  placeholder: {\n    width: 50\n  },\n  scanningHeader: {\n    padding: 20,\n    backgroundColor: 'white'\n  },\n  cardsContainer: {\n    flex: 1,\n    padding: 20\n  },\n  cardItem: {\n    marginBottom: 20\n  },\n  backButton: {\n    margin: 20\n  }\n});","map":{"version":3,"names":["React","useState","useRef","useEffect","View","Text","StyleSheet","TouchableOpacity","Alert","Dimensions","Camera","CameraType","Ionicons","Button","Card","Title","Paragraph","ImageManipulator","detectCards","saveCardToCollection","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","height","ScannerScreen","_useState","_useState2","_slicedToArray","hasPermission","setHasPermission","_useState3","back","_useState4","cameraType","setCameraType","_useState5","_useState6","isScanning","setIsScanning","_useState7","_useState8","detectedCards","setDetectedCards","_useState9","_useState0","isProcessing","setIsProcessing","cameraRef","_asyncToGenerator","_yield$Camera$request","requestCameraPermissionsAsync","status","takePicture","_ref2","current","photo","takePictureAsync","quality","base64","processImage","uri","error","console","alert","apply","arguments","_ref3","imageUri","optimizedImage","manipulateAsync","resize","compress","format","SaveFormat","JPEG","length","_x","saveCard","_ref4","card","name","prev","filter","c","id","_x2","skipCard","cardId","flipCamera","front","style","styles","container","children","scanningHeader","cardsContainer","map","cardItem","Cover","source","image","Content","set","price","Math","round","confidence","Actions","onPress","mode","backButton","camera","type","ref","overlay","scanFrame","corner","cornerTopRight","cornerBottomLeft","cornerBottomRight","instructionText","buttonContainer","flipButton","size","color","captureButton","captureButtonDisabled","disabled","captureButtonInner","placeholder","create","flex","backgroundColor","justifyContent","alignItems","borderWidth","borderColor","position","borderLeftWidth","borderTopWidth","top","left","right","borderRightWidth","bottom","borderBottomWidth","fontSize","textAlign","marginTop","paddingHorizontal","paddingVertical","borderRadius","flexDirection","paddingBottom","opacity","padding","marginBottom","margin"],"sources":["C:/Users/dschi/OneDrive/Desktop/collectible/src/screens/ScannerScreen.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Alert,\r\n  Dimensions,\r\n  Image,\r\n} from 'react-native';\r\nimport { Camera, CameraType } from 'expo-camera';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Button, Card, Title, Paragraph } from 'react-native-paper';\r\nimport * as ImageManipulator from 'expo-image-manipulator';\r\nimport * as FileSystem from 'expo-file-system';\r\n\r\n// Import services\r\nimport { detectCards, recognizeCard } from '../services/aiService';\r\nimport { saveCardToCollection } from '../services/collectionService';\r\n\r\nconst { width, height } = Dimensions.get('window');\r\n\r\ninterface DetectedCard {\r\n  id: string;\r\n  name: string;\r\n  set: string;\r\n  price: number;\r\n  image: string;\r\n  confidence: number;\r\n  boundingBox: {\r\n    x: number;\r\n    y: number;\r\n    width: number;\r\n    height: number;\r\n  };\r\n}\r\n\r\nexport default function ScannerScreen() {\r\n  const [hasPermission, setHasPermission] = useState<boolean | null>(null);\r\n  const [cameraType, setCameraType] = useState(CameraType.back);\r\n  const [isScanning, setIsScanning] = useState(false);\r\n  const [detectedCards, setDetectedCards] = useState<DetectedCard[]>([]);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const cameraRef = useRef<Camera>(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { status } = await Camera.requestCameraPermissionsAsync();\r\n      setHasPermission(status === 'granted');\r\n    })();\r\n  }, []);\r\n\r\n  const takePicture = async () => {\r\n    if (cameraRef.current && !isProcessing) {\r\n      setIsProcessing(true);\r\n      try {\r\n        const photo = await cameraRef.current.takePictureAsync({\r\n          quality: 0.8,\r\n          base64: true,\r\n        });\r\n\r\n        // Process the image to detect cards\r\n        await processImage(photo.uri);\r\n      } catch (error) {\r\n        console.error('Error taking picture:', error);\r\n        Alert.alert('Error', 'Failed to take picture');\r\n      } finally {\r\n        setIsProcessing(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const processImage = async (imageUri: string) => {\r\n    try {\r\n      // Optimize image for AI processing\r\n      const optimizedImage = await ImageManipulator.manipulateAsync(\r\n        imageUri,\r\n        [{ resize: { width: 1024 } }],\r\n        { compress: 0.8, format: ImageManipulator.SaveFormat.JPEG, base64: true }\r\n      );\r\n\r\n      // Detect cards in the image\r\n      const detectedCards = await detectCards(optimizedImage.base64!);\r\n      setDetectedCards(detectedCards);\r\n\r\n      if (detectedCards.length > 0) {\r\n        setIsScanning(true);\r\n      } else {\r\n        Alert.alert('No Cards Found', 'No collectible cards were detected in the image. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error processing image:', error);\r\n      Alert.alert('Error', 'Failed to process image');\r\n    }\r\n  };\r\n\r\n  const saveCard = async (card: DetectedCard) => {\r\n    try {\r\n      await saveCardToCollection(card);\r\n      Alert.alert('Success', `${card.name} has been added to your collection!`);\r\n      \r\n      // Remove the card from detected cards\r\n      setDetectedCards(prev => prev.filter(c => c.id !== card.id));\r\n      \r\n      if (detectedCards.length === 1) {\r\n        setIsScanning(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving card:', error);\r\n      Alert.alert('Error', 'Failed to save card to collection');\r\n    }\r\n  };\r\n\r\n  const skipCard = (cardId: string) => {\r\n    setDetectedCards(prev => prev.filter(c => c.id !== cardId));\r\n    if (detectedCards.length === 1) {\r\n      setIsScanning(false);\r\n    }\r\n  };\r\n\r\n  const flipCamera = () => {\r\n    setCameraType(current => \r\n      current === CameraType.back ? CameraType.front : CameraType.back\r\n    );\r\n  };\r\n\r\n  if (hasPermission === null) {\r\n    return <View style={styles.container}><Text>Requesting camera permission...</Text></View>;\r\n  }\r\n  if (hasPermission === false) {\r\n    return <View style={styles.container}><Text>No access to camera</Text></View>;\r\n  }\r\n\r\n  if (isScanning) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.scanningHeader}>\r\n          <Title>Detected Cards</Title>\r\n          <Paragraph>{detectedCards.length} card(s) found</Paragraph>\r\n        </View>\r\n        \r\n        <View style={styles.cardsContainer}>\r\n          {detectedCards.map((card) => (\r\n            <Card key={card.id} style={styles.cardItem}>\r\n              <Card.Cover source={{ uri: card.image }} />\r\n              <Card.Content>\r\n                <Title>{card.name}</Title>\r\n                <Paragraph>{card.set}</Paragraph>\r\n                <Paragraph>Estimated Value: ${card.price}</Paragraph>\r\n                <Paragraph>Confidence: {Math.round(card.confidence * 100)}%</Paragraph>\r\n              </Card.Content>\r\n              <Card.Actions>\r\n                <Button onPress={() => saveCard(card)} mode=\"contained\">\r\n                  Add to Collection\r\n                </Button>\r\n                <Button onPress={() => skipCard(card.id)} mode=\"outlined\">\r\n                  Skip\r\n                </Button>\r\n              </Card.Actions>\r\n            </Card>\r\n          ))}\r\n        </View>\r\n        \r\n        <Button \r\n          onPress={() => setIsScanning(false)} \r\n          mode=\"outlined\" \r\n          style={styles.backButton}\r\n        >\r\n          Back to Scanner\r\n        </Button>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Camera \r\n        style={styles.camera} \r\n        type={cameraType}\r\n        ref={cameraRef}\r\n      >\r\n        <View style={styles.overlay}>\r\n          {/* Scanning frame overlay */}\r\n          <View style={styles.scanFrame}>\r\n            <View style={styles.corner} />\r\n            <View style={[styles.corner, styles.cornerTopRight]} />\r\n            <View style={[styles.corner, styles.cornerBottomLeft]} />\r\n            <View style={[styles.corner, styles.cornerBottomRight]} />\r\n          </View>\r\n          \r\n          <Text style={styles.instructionText}>\r\n            Position cards within the frame\r\n          </Text>\r\n        </View>\r\n        \r\n        <View style={styles.buttonContainer}>\r\n          <TouchableOpacity style={styles.flipButton} onPress={flipCamera}>\r\n            <Ionicons name=\"camera-reverse\" size={30} color=\"white\" />\r\n          </TouchableOpacity>\r\n          \r\n          <TouchableOpacity \r\n            style={[styles.captureButton, isProcessing && styles.captureButtonDisabled]} \r\n            onPress={takePicture}\r\n            disabled={isProcessing}\r\n          >\r\n            <View style={styles.captureButtonInner} />\r\n          </TouchableOpacity>\r\n          \r\n          <View style={styles.placeholder} />\r\n        </View>\r\n      </Camera>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  camera: {\r\n    flex: 1,\r\n  },\r\n  overlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0,0,0,0.3)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  scanFrame: {\r\n    width: width * 0.8,\r\n    height: height * 0.4,\r\n    borderWidth: 2,\r\n    borderColor: 'transparent',\r\n    position: 'relative',\r\n  },\r\n  corner: {\r\n    position: 'absolute',\r\n    width: 30,\r\n    height: 30,\r\n    borderLeftWidth: 3,\r\n    borderTopWidth: 3,\r\n    borderColor: '#007AFF',\r\n    top: -2,\r\n    left: -2,\r\n  },\r\n  cornerTopRight: {\r\n    right: -2,\r\n    left: 'auto',\r\n    borderLeftWidth: 0,\r\n    borderRightWidth: 3,\r\n  },\r\n  cornerBottomLeft: {\r\n    bottom: -2,\r\n    top: 'auto',\r\n    borderTopWidth: 0,\r\n    borderBottomWidth: 3,\r\n  },\r\n  cornerBottomRight: {\r\n    bottom: -2,\r\n    right: -2,\r\n    top: 'auto',\r\n    left: 'auto',\r\n    borderLeftWidth: 0,\r\n    borderTopWidth: 0,\r\n    borderRightWidth: 3,\r\n    borderBottomWidth: 3,\r\n  },\r\n  instructionText: {\r\n    color: 'white',\r\n    fontSize: 16,\r\n    textAlign: 'center',\r\n    marginTop: 20,\r\n    backgroundColor: 'rgba(0,0,0,0.7)',\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n    borderRadius: 20,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    alignItems: 'center',\r\n    paddingBottom: 50,\r\n    paddingHorizontal: 20,\r\n  },\r\n  flipButton: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  captureButton: {\r\n    width: 80,\r\n    height: 80,\r\n    borderRadius: 40,\r\n    backgroundColor: 'rgba(255,255,255,0.3)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderWidth: 4,\r\n    borderColor: 'white',\r\n  },\r\n  captureButtonDisabled: {\r\n    opacity: 0.5,\r\n  },\r\n  captureButtonInner: {\r\n    width: 60,\r\n    height: 60,\r\n    borderRadius: 30,\r\n    backgroundColor: 'white',\r\n  },\r\n  placeholder: {\r\n    width: 50,\r\n  },\r\n  scanningHeader: {\r\n    padding: 20,\r\n    backgroundColor: 'white',\r\n  },\r\n  cardsContainer: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n  cardItem: {\r\n    marginBottom: 20,\r\n  },\r\n  backButton: {\r\n    margin: 20,\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}