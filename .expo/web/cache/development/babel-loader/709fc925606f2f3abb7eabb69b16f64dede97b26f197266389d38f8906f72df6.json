{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Provider as PaperProvider } from 'react-native-paper';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport ScannerScreen from \"./src/screens/ScannerScreen\";\nimport CollectionScreen from \"./src/screens/CollectionScreen\";\nimport ProfileScreen from \"./src/screens/ProfileScreen\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  return _jsx(SafeAreaProvider, {\n    children: _jsxs(PaperProvider, {\n      children: [_jsx(NavigationContainer, {\n        children: _jsxs(Tab.Navigator, {\n          screenOptions: function screenOptions(_ref) {\n            var route = _ref.route;\n            return {\n              tabBarIcon: function tabBarIcon(_ref2) {\n                var focused = _ref2.focused,\n                  color = _ref2.color,\n                  size = _ref2.size;\n                var iconName;\n                if (route.name === 'Scanner') {\n                  iconName = focused ? 'camera' : 'camera-outline';\n                } else if (route.name === 'Collection') {\n                  iconName = focused ? 'albums' : 'albums-outline';\n                } else if (route.name === 'Profile') {\n                  iconName = focused ? 'person' : 'person-outline';\n                } else {\n                  iconName = 'help-outline';\n                }\n                return _jsx(Ionicons, {\n                  name: iconName,\n                  size: size,\n                  color: color\n                });\n              },\n              tabBarActiveTintColor: '#007AFF',\n              tabBarInactiveTintColor: 'gray',\n              headerStyle: {\n                backgroundColor: '#007AFF'\n              },\n              headerTintColor: '#fff',\n              headerTitleStyle: {\n                fontWeight: 'bold'\n              }\n            };\n          },\n          children: [_jsx(Tab.Screen, {\n            name: \"Scanner\",\n            component: ScannerScreen,\n            options: {\n              title: 'Scan Cards'\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"Collection\",\n            component: CollectionScreen,\n            options: {\n              title: 'My Collection'\n            }\n          }), _jsx(Tab.Screen, {\n            name: \"Profile\",\n            component: ProfileScreen,\n            options: {\n              title: 'Profile'\n            }\n          })]\n        })\n      }), _jsx(StatusBar, {\n        style: \"auto\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","NavigationContainer","createBottomTabNavigator","Provider","PaperProvider","StatusBar","SafeAreaProvider","ScannerScreen","CollectionScreen","ProfileScreen","Ionicons","jsx","_jsx","jsxs","_jsxs","Tab","App","children","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","Screen","component","options","title","style"],"sources":["C:/Users/dschi/OneDrive/Desktop/collectible/App.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { Provider as PaperProvider } from 'react-native-paper';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\n\r\n// Import screens\r\nimport ScannerScreen from './src/screens/ScannerScreen';\r\nimport CollectionScreen from './src/screens/CollectionScreen';\r\nimport ProfileScreen from './src/screens/ProfileScreen';\r\n\r\n// Import icons\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function App() {\r\n  return (\r\n    <SafeAreaProvider>\r\n      <PaperProvider>\r\n        <NavigationContainer>\r\n          <Tab.Navigator\r\n            screenOptions={({ route }) => ({\r\n              tabBarIcon: ({ focused, color, size }) => {\r\n                let iconName: keyof typeof Ionicons.glyphMap;\r\n\r\n                if (route.name === 'Scanner') {\r\n                  iconName = focused ? 'camera' : 'camera-outline';\r\n                } else if (route.name === 'Collection') {\r\n                  iconName = focused ? 'albums' : 'albums-outline';\r\n                } else if (route.name === 'Profile') {\r\n                  iconName = focused ? 'person' : 'person-outline';\r\n                } else {\r\n                  iconName = 'help-outline';\r\n                }\r\n\r\n                return <Ionicons name={iconName} size={size} color={color} />;\r\n              },\r\n              tabBarActiveTintColor: '#007AFF',\r\n              tabBarInactiveTintColor: 'gray',\r\n              headerStyle: {\r\n                backgroundColor: '#007AFF',\r\n              },\r\n              headerTintColor: '#fff',\r\n              headerTitleStyle: {\r\n                fontWeight: 'bold',\r\n              },\r\n            })}\r\n          >\r\n            <Tab.Screen \r\n              name=\"Scanner\" \r\n              component={ScannerScreen}\r\n              options={{ title: 'Scan Cards' }}\r\n            />\r\n            <Tab.Screen \r\n              name=\"Collection\" \r\n              component={CollectionScreen}\r\n              options={{ title: 'My Collection' }}\r\n            />\r\n            <Tab.Screen \r\n              name=\"Profile\" \r\n              component={ProfileScreen}\r\n              options={{ title: 'Profile' }}\r\n            />\r\n          </Tab.Navigator>\r\n        </NavigationContainer>\r\n        <StatusBar style=\"auto\" />\r\n      </PaperProvider>\r\n    </SafeAreaProvider>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,wBAAwB,QAAQ,+BAA+B;AACxE,SAASC,QAAQ,IAAIC,aAAa,QAAQ,oBAAoB;AAC9D,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,gBAAgB,QAAQ,gCAAgC;AAGjE,OAAOC,aAAa;AACpB,OAAOC,gBAAgB;AACvB,OAAOC,aAAa;AAGpB,SAASC,QAAQ,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE9C,IAAMC,GAAG,GAAGb,wBAAwB,CAAC,CAAC;AAEtC,eAAe,SAASc,GAAGA,CAAA,EAAG;EAC5B,OACEJ,IAAA,CAACN,gBAAgB;IAAAW,QAAA,EACfH,KAAA,CAACV,aAAa;MAAAa,QAAA,GACZL,IAAA,CAACX,mBAAmB;QAAAgB,QAAA,EAClBH,KAAA,CAACC,GAAG,CAACG,SAAS;UACZC,aAAa,EAAE,SAAfA,aAAaA,CAAAC,IAAA;YAAA,IAAKC,KAAK,GAAAD,IAAA,CAALC,KAAK;YAAA,OAAQ;cAC7BC,UAAU,EAAE,SAAZA,UAAUA,CAAAC,KAAA,EAAgC;gBAAA,IAA3BC,OAAO,GAAAD,KAAA,CAAPC,OAAO;kBAAEC,KAAK,GAAAF,KAAA,CAALE,KAAK;kBAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;gBACjC,IAAIC,QAAwC;gBAE5C,IAAIN,KAAK,CAACO,IAAI,KAAK,SAAS,EAAE;kBAC5BD,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,gBAAgB;gBAClD,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,YAAY,EAAE;kBACtCD,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,gBAAgB;gBAClD,CAAC,MAAM,IAAIH,KAAK,CAACO,IAAI,KAAK,SAAS,EAAE;kBACnCD,QAAQ,GAAGH,OAAO,GAAG,QAAQ,GAAG,gBAAgB;gBAClD,CAAC,MAAM;kBACLG,QAAQ,GAAG,cAAc;gBAC3B;gBAEA,OAAOf,IAAA,CAACF,QAAQ;kBAACkB,IAAI,EAAED,QAAS;kBAACD,IAAI,EAAEA,IAAK;kBAACD,KAAK,EAAEA;gBAAM,CAAE,CAAC;cAC/D,CAAC;cACDI,qBAAqB,EAAE,SAAS;cAChCC,uBAAuB,EAAE,MAAM;cAC/BC,WAAW,EAAE;gBACXC,eAAe,EAAE;cACnB,CAAC;cACDC,eAAe,EAAE,MAAM;cACvBC,gBAAgB,EAAE;gBAChBC,UAAU,EAAE;cACd;YACF,CAAC;UAAA,CAAE;UAAAlB,QAAA,GAEHL,IAAA,CAACG,GAAG,CAACqB,MAAM;YACTR,IAAI,EAAC,SAAS;YACdS,SAAS,EAAE9B,aAAc;YACzB+B,OAAO,EAAE;cAAEC,KAAK,EAAE;YAAa;UAAE,CAClC,CAAC,EACF3B,IAAA,CAACG,GAAG,CAACqB,MAAM;YACTR,IAAI,EAAC,YAAY;YACjBS,SAAS,EAAE7B,gBAAiB;YAC5B8B,OAAO,EAAE;cAAEC,KAAK,EAAE;YAAgB;UAAE,CACrC,CAAC,EACF3B,IAAA,CAACG,GAAG,CAACqB,MAAM;YACTR,IAAI,EAAC,SAAS;YACdS,SAAS,EAAE5B,aAAc;YACzB6B,OAAO,EAAE;cAAEC,KAAK,EAAE;YAAU;UAAE,CAC/B,CAAC;QAAA,CACW;MAAC,CACG,CAAC,EACtB3B,IAAA,CAACP,SAAS;QAACmC,KAAK,EAAC;MAAM,CAAE,CAAC;IAAA,CACb;EAAC,CACA,CAAC;AAEvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}